Создание учебной документации на основе исходного кода Python.

В отличие от существующих систем генерации документации, должно быть реализовано:
 - гибкое добавление объектов языка в документацию
 - локализация строк документации
 - добавление документации изначально недокументированных разработчиками объектов
 - примеры кода

Документация должна генерироваться в полностью готовом виде, чтобы исключить ручную работу. Человеком настраивается только набор правил, локализация, строки кода для примеров.

Определение объектов для документации (tree.py)
    Объект в Python можно представить в виде дерева.  В корне находится объект, на ветвях - атрибуты. Каждый атрибут тоже объект со своими атрибутами.
    Если мы хотим исследовать объект, то должны рекурсивно обойти все атрибуты. Но так в исследование попадут атрибуты, которые наследованы от классов или импортированные из других модулей. 
    Поэтому для каждого объекта нужно принять решение включать ли его в документацию. И если включать, то нужно ли рекурсивно обходить атрибуты.
    Логично единицей учебной документации сделать модуль. И документировать в модуле объекты, которые в нём определены.  А импортированные и наследованные объекты не документировать, так как они должны документироваться в своих модулях.

Объекты для представления (obj.py)
    Включает классы объектов. 
    Каждый объект придерживается соглашения: 
    1. Инфо содержит в атрибутах. 
    2. Наследуется от базового класса obj.Obj
    3. Возможность представления в виде словаря
    4. Возможность итерирования по содержимому атрибутов для работы с объектами с непостоянным количеством элементов (см. obj.Params)

Структура для представления
    Термины
        Объект
            словарь с ключами type и content
        Тип
            значение под ключём type в объекте. Используется для определения метода для представления контента в классе Repr.
        Контент
            значение под ключём content в объекте. Информация для представления
        Представление (действие)
            То что делают методы объекта repr.Repr
        Представление (результат действия)
            То что возвращают методы объекта repr.Repr

    Примеры
        контент - строка
            {'name': {
                'type': 'Name',
                'content': 'string.Template'
                }
            }

        контент - список
            {'magics': {
                'type': 'Magics',
                'content': [
                    '__lt__',
                    '__le__',
                    '__len__',
                    '__contains__'
                    ]
                }
            }

        контент - вложенные структуры
            {'Template': {
                'type': 'Class',
                'content': {
                    'name': {
                        'type': 'Name',
                        'content': 'string.Template'
                        },
                    'class': {
                        'type': 'Class__',
                        'content': 'string._TemplateMetaclass'
                        }
                    }
                }
            }

        контент - параметр
            {
                'type': 'Param',
                'content': {
                    'name': '...',
                    'kind': '...',
                    'default': '...',
                    'desc': '...'
                }
            }

        контент - параметры
            {
                'type': 'Params',
                'content': {
                    'a': {
                        'type': 'Param',
                        'content': { ... }
                    },

                    'b': {
                        'type': 'Param',
                        'content': { ... }
                    }
                }
            }

        контент - возвращаемое значение
            {'return': {
                'type': 'Return',
                'content': 'object of str'
                }
            }

Представление объектов в строковом виде (repr.py)
    Основа модуля - класс Repr, который включает методы представления объектов в виде строк. 
    Каждый метод придерживается соглашения: 
    1. Его имя совпадает с именем класса обрабатываемого объекта;
    2. Он принимает в качестве аргумента один параметр obj.
    3. obj должен обладать определёнными атрибутами и каждый атрибут - это экземпляр str.
    
Извлечение информации из реального объекта (make.py)
    Основа модуля - класс Make, который включает методы преобразования реальных объектов Python во объекты модуля obj.py
    Каждый метод придерживается соглашения: 
    1. Его имя совпадает с именем класса возвращаемого объекта;
    2. Он принимает в качестве аргумента один параметр obj.
